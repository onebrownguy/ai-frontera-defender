name: Animation A/B Testing Pipeline

on:
  push:
    branches: [ master, anime-animations ]
  pull_request:
    branches: [ master ]

jobs:
  performance-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [master, anime-animations]
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        scope: ${{ secrets.TEAM_ID }}
        alias-domains: |
          preview-${{ matrix.branch }}-${{ github.sha }}.vercel.app
    
    - name: Wait for deployment
      run: sleep 30
    
    - name: Run performance tests
      run: |
        export VERCEL_URL="https://preview-${{ matrix.branch }}-${{ github.sha }}.vercel.app"
        npm run test:performance
      continue-on-error: true
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results-${{ matrix.branch }}
        path: performance-report.json
  
  compare-performance:
    runs-on: ubuntu-latest
    needs: performance-test
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download performance results
      uses: actions/download-artifact@v3
      with:
        name: performance-results-master
        path: ./results/master/
    
    - name: Download anime performance results
      uses: actions/download-artifact@v3
      with:
        name: performance-results-anime-animations
        path: ./results/anime/
      continue-on-error: true
    
    - name: Compare results and comment
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          try {
            const masterResults = JSON.parse(fs.readFileSync('./results/master/performance-report.json', 'utf8'));
            const animeResults = JSON.parse(fs.readFileSync('./results/anime/performance-report.json', 'utf8'));
            
            const loadTimeDiff = animeResults.summary.loadTimeDifference;
            const bundleDiff = (animeResults.summary.bundleSizeDifference / 1024).toFixed(1);
            
            const comment = `## 🎬 Animation Performance Comparison
            
| Metric | Master (Vanilla) | Anime.js Branch | Difference |
|--------|------------------|-----------------|------------|
| Load Time | ${masterResults.results.vanilla.loadTime}ms | ${animeResults.results.anime.loadTime}ms | ${loadTimeDiff > 0 ? '+' : ''}${loadTimeDiff}ms |
| Bundle Size | ${(masterResults.results.vanilla.bundleSize / 1024).toFixed(1)}KB | ${(animeResults.results.anime.bundleSize / 1024).toFixed(1)}KB | ${bundleDiff > 0 ? '+' : ''}${bundleDiff}KB |
| Recommendation | - | - | **${animeResults.summary.recommendation}** |

### 📊 Analysis
${loadTimeDiff < 200 ? '✅' : '⚠️'} Load time impact: ${loadTimeDiff}ms
${bundleDiff < 100 ? '✅' : '⚠️'} Bundle size impact: ${bundleDiff}KB
            
### 🎯 Decision Framework
- **Choose Anime.js** if load time increase < 200ms and enhanced animations provide value
- **Stick with Vanilla** if performance is critical or simple animations suffice
            
[View detailed performance report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not generate performance comparison:', error.message);
          }

  deploy-production:
    runs-on: ubuntu-latest
    needs: [performance-test, compare-performance]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'
        scope: ${{ secrets.TEAM_ID }}

  rollback-on-failure:
    runs-on: ubuntu-latest
    needs: deploy-production
    if: failure()
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Rollback deployment
      run: |
        # Get previous commit
        PREVIOUS_COMMIT=$(git rev-parse HEAD~1)
        echo "Rolling back to $PREVIOUS_COMMIT"
        
        # Trigger rollback deployment
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"name\":\"${{ secrets.PROJECT_ID }}\",\"target\":\"production\",\"gitSource\":{\"type\":\"github\",\"ref\":\"$PREVIOUS_COMMIT\"}}" \
          "https://api.vercel.com/v13/deployments"